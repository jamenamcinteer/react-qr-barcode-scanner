name: Release Prep

on:
  schedule:
    # Runs every 2 weeks (Monday at 00:00 UTC)
    - cron: "0 0 */14 * *"
  workflow_dispatch: # Optional: Allow manual trigger

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-prep
  cancel-in-progress: false

jobs:
  prepare-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout next-release branch
        uses: actions/checkout@v4
        with:
          ref: next-release
          fetch-depth: 0

      - name: Ensure no existing release PR (next-release -> main)
        id: prcheck
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          # Look for open PRs with head=OWNER:next-release and base=main
          COUNT=$(gh api \
            -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$REPO/pulls?state=open&head=$OWNER:next-release&base=main" \
            --jq 'length')
          echo "open_count=$COUNT" >> "$GITHUB_OUTPUT"
          if [ "$COUNT" -gt 0 ]; then
            echo "An open release PR already exists. Skipping."
          fi

      - name: Setup Node.js
        if: steps.prcheck.outputs.open_count == '0'
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        if: steps.prcheck.outputs.open_count == '0'
        run: yarn install --frozen-lockfile

      - name: Run standard-version (bump version, changelog, tag)
        if: steps.prcheck.outputs.open_count == '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          yarn release

      - name: Push changes and tags
        if: steps.prcheck.outputs.open_count == '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git push origin next-release
          git push origin --tags

      - name: Create PR from next-release to main
        if: steps.prcheck.outputs.open_count == '0'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base main \
            --head next-release \
            --title "chore(release): $(jq -r .version package.json)" \
            --body "Automated release PR for version $(jq -r .version package.json)" \
          || echo "PR already exists or failed"
